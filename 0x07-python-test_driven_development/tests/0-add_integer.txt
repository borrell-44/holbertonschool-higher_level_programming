Getting function:
*****************

>>> add_integer = __import__('0-add_integer').add_integer



Testing Cases:
**************

>>> add_integer(2)
100

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(100.3, -2)
98

>>> add_integer(4, "School")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer("unicorn")
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(0.1E3089999999)
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> import numpy as np
>>> add_integer(np.nan)
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

